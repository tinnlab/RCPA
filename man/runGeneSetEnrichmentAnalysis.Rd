% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geneset-analysis.R
\name{runGeneSetEnrichmentAnalysis}
\alias{runGeneSetEnrichmentAnalysis}
\title{Geneset Enrichment Analysis}
\usage{
runGeneSetEnrichmentAnalysis(
  summarizedExperiment,
  genesets,
  method = c("ora", "fgsea", "gsa", "ks", "wilcox"),
  ORAArgs = list(pThreshold = 0.05),
  FgseaArgs = list(sampleSize = 101, minSize = 1, maxSize = Inf, eps = 1e-50, scoreType =
    "std", nproc = 0, gseaParam = 1, BPPARAM = NULL, nPermSimple = 1000, absEps = NULL),
  GSAArgs = list(method = "maxmean", random.seed = NULL, knn.neighbors = 10, s0 = NULL,
    s0.perc = NULL, minsize = 15, maxsize = 500, restand = TRUE, restand.basis =
    "catalog", nperms = 200, xl.mode = "regular", xl.time = NULL, xl.prevfit = NULL)
)
}
\arguments{
\item{summarizedExperiment}{The generated SummarizedExpriment object from DE analysis result.}

\item{genesets}{The genesets definition, ex. KEGG genesets from getGeneSets function.}

\item{method}{The geneset analsyis method, including ORA, fgsea, GSA, ks, and wilcox.}

\item{ORAArgs}{A list of other passed arguments to ORA. pThreshold is used as p.value cutoff to pick DE genes.}

\item{FgseaArgs}{A list of other passed arguments to fgsea. See fgsea function.}

\item{GSAArgs}{A list of other passed arguments to GSA. See GSA function.}
}
\value{
A dataframe of geneset analysis result
}
\description{
This function performs geneset analysis using either ORA, fgsea, GSA, ks, or wilcox approaches.
}
\examples{
\dontrun{
# Loading libraries
library(testthat)
library(hgu133plus2.db)
library(AnnotationDbi)
library(SummarizedExperiment)
library(limma)
library(RPCA)
# Set seed for reproducibility
set.seed(123)
# Simulate a random gene expression matrix
exprs <- round(matrix(2^abs(rnorm(100000, sd = 4)), nrow = 10000, ncol = 10))
# Set row names for the expression matrix
rownames(exprs) <- sample(keys(hgu133plus2.db, keytype = "PROBEID"), nrow(exprs), replace = FALSE)
# Set column names for the expression matrix
colnames(exprs) <- paste0("sample", 1:10)
# Assign control samples
controlSamples <- paste0("sample", 1:5)
# Assign condition samples
conditionSamples <- paste0("sample", 6:10)
# Generate colData frame
colData <- data.frame(
  row.names = colnames(exprs),
  group = factor(c(rep("control", 
  length(controlSamples)), 
  rep("condition", 
  length(conditionSamples)))),
  pair = factor(c(seq_along(controlSamples), seq_along(conditionSamples)))
)
# Generate summarizedExperiment object
summarizedExperiment <- SummarizedExperiment(
  assays = list(counts = exprs),
  colData = colData
)
# # control vs condition
design <- model.matrix(~0 + group, data = colData)
contrast <- makeContrasts("groupcondition-groupcontrol", levels = design)

# two class paired
# design <- model.matrix(~0 + group + pair, data = colData)
# contrast <- makeContrasts("groupcondition-groupcontrol", levels = design.paired)

# Run differential expression analysis
DERes <- runDEAnalysis(summarizedExperiment, 
method = "DESeq2", 
design, 
contrast, 
annotation = "GPL570")

# Simulate geneset
gs <- lapply(1:100, function(x) {
  sample(rownames(DERes), runif(1, 100, 500))
})

# Assign geneset names and descriptions
names(gs) <- paste0("geneset", 1:100)
gs_fullNames <- paste0("path:", 1:100)
names(gs_fullNames) <- names(gs)

# Create genesets list
genesets <- list(
  database = "TEST",
  genesets = gs,
  names = gs_fullNames
)

# Perform geneset enrichment analysis using wilcox test
result <- runGeneSetEnrichmentAnalysis(DERes, genesets, method = "wilcox")
# Perform geneset enrichment analysis using over representation analysis
result <- runGeneSetEnrichmentAnalysis(DERes, genesets, method = "ora")
# Perform geneset enrichment analysis using fgsea
result <- runGeneSetEnrichmentAnalysis(DERes, genesets, method = "fgsea")
# Perform geneset enrichment analysis using ks test
result <- runGeneSetEnrichmentAnalysis(DERes, genesets, method = "ks")
# Perform geneset enrichment analysis using gsa
result <- runGeneSetEnrichmentAnalysis(DERes, genesets, method = "gsa")
}
}
